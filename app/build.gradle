apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    dexOptions {
        javaMaxHeapSize "2g"
        jumboMode true
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
    }

    lintOptions {
        disable 'MissingTranslation'
    }

    signingConfigs {
        prodKey {
            keyAlias 'akardayaprod'
            keyPassword 'akardayapin095'
            storePassword 'pinakardaya590'
            storeFile file('akardaya-key.jks')
        }
    }
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        applicationId "com.sgo.hpku"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        // Enabling multidex support.
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    android {
        useLibrary 'org.apache.http.legacy'
    }
    productFlavors {
        development {
            applicationId "com.sgo.hpkudev"
            resValue "string", "appname", "DEV HPKu"
            resValue "string", "dbname", "DevHPKu.db"
            resValue "string", "realmname", "com.sgo.hpkudev.realm"
            resValue "integer", "realscheme", "0"
            resValue "string", "realmBillerName", "hpkurealmdev.realm"
            resValue "integer", "realBillerscheme", "0"
            resValue "string", "realmBBSName", "hpkubbsdev.realm"
            resValue "integer", "realBBScheme", "0"
            resValue "integer", "dbversion", "1"
            buildConfigField 'boolean', "isProdDomain", "false"

            //buildConfigField 'String', "HeadAddress", "\"192.168.88.22:59088/\""
            buildConfigField 'String', "HeadAddress", "\"https://mobile-dev.espay.id/\""

            versionCode = 1
            versionName "1.0"
            buildConfigField 'String', "AppID", "\"AKD\""
            //buildConfigField 'String', "AppIDHpku", "\"HPKU\""
            buildConfigField 'String', "AppIDHpku", "\"AKD\""
        }
        production {
            applicationId "com.sgo.hpku"
            resValue "string", "appname", "HPKu"
            resValue "string", "dbname", "hpku.db"
            resValue "string", "realmname", "hpkurealm.realm"
            resValue "integer", "realscheme", "0"
            resValue "string", "realmBillerName", "hpkubiller.realm"
            resValue "integer", "realBillerscheme", "0"
            resValue "string", "realmBBSName", "hpkubbs.realm"
            resValue "integer", "realBBScheme", "0"
            resValue "integer", "dbversion", "1"
            buildConfigField 'boolean', "isProdDomain", "true"
//            buildConfigField 'String', "HeadAddress", "\"https://mobile.goworld.asia/akardaya2/\""
            buildConfigField 'String', "HeadAddress", "\"https://mobile.espay.id/\""
            signingConfig signingConfigs.prodKey
            versionCode = 21
            versionName "2.20"
            buildConfigField 'String', "AppID", "\"AKD\""
            buildConfigField 'String', "AppIDHpku", "\"HPKU\""
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.prodKey
        }
        debug {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        def fileName
        if (variant.baseName.contains("development")) {
            fileName = "Dev HPKu"
        } else {
            fileName = "HPKu"
        }
        variant.outputs.each { output ->
            def apk = output.outputFile;
            def newName = fileName + "-${variant.mergedFlavor.versionName}"
            if (variant.buildType.name.contains("release")) {
//                newName += "-${variant.buildType.versionNameSuffix}"
                newName += "- release"
            } else {
                newName += "- debug"
            }

//            if (output.zipAlign) {
//                output.zipAlign.outputFile = new File((File) apk.parentFile, newName + '.apk');
//            }
            output.packageApplication.outputFile = new File((File) apk.parentFile, newName + ".apk")
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support:support-annotations:25.3.1'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'

    compile 'in.srain.cube:ultra-ptr:1.0.11'
    compile 'com.balysv:material-ripple:1.0.2'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:customtabs:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.michaelpardo:activeandroid:3.1.0-SNAPSHOT'
    compile 'com.lsjwzh:materialloadingprogressbar:0.5.8-RELEASE'
    compile 'com.dlazaro66.qrcodereaderview:qrcodereaderview:1.0.0'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.loopj.android:android-async-http:1.4.8'
    compile 'com.klinkerapps:android-chips:1.0.1@aar'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.u1aryz:android-newpopupmenu-lib:1.0.1'
    compile 'com.wdullaer:materialdatetimepicker:1.5.4'
    compile 'com.joanzapata.iconify:android-iconify-fontawesome:2.1.0'
    compile 'org.ocpsoft.prettytime:prettytime:4.0.1.Final'
    compile 'commons-codec:commons-codec:1.10'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'com.github.paolorotolo:appintro:3.4.0'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.jakewharton.timber:timber:4.1.0'
    compile 'com.txusballesteros:FitChart:1.0'
    compile 'commons-io:commons-io:2.4'
    compile 'com.android.support:design:25.3.1'
    compile 'com.gordonwong:material-sheet-fab:1.2'
    compile 'joda-time:joda-time:2.9.3'
    compile 'com.facebook.stetho:stetho:1.4.2'
    compile 'com.uphyca:stetho_realm:2.0.1'
    compile 'com.faber.circlestepview:library:1.0.0@aar'

    compile 'com.google.firebase:firebase-core:10.2.0'
    compile 'pub.devrel:easypermissions:0.4.2'
    compile 'com.google.firebase:firebase-crash:10.2.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.google.android.gms:play-services-maps:10.2.0'
    compile 'com.google.android.gms:play-services-location:10.2.0'
    compile 'com.google.android.gms:play-services-places:10.2.0'
    compile 'com.squareup:android-times-square:1.6.5@aar'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta3'
    compile 'com.sothree.slidinguppanel:library:3.3.1'

    compile project(':PinMaster')
    compile project(':PinnedSectionList')
    compile project(':VPI')
    compile project(':SecurePref')

}
//apply plugin: 'com.google.gms.google-services'
